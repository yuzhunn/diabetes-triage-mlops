name: Release (train, docker, GHCR, notes)

on:
  push:
    tags:
      - 'v*'          # e.g. v0.1, v0.2
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  IMAGE: ghcr.io/yuzhunn/diabetes-triage-mlops
  PYTHON_VERSION: '3.11'
  PORT: '8000'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Resolve TAG
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          elif [ -n "${GITHUB_REF_NAME}" ]; then
            echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi
          echo "Resolved TAG=$(cat $GITHUB_OUTPUT | sed -n 's/^tag=//p')"

      - name: Install deps & Train
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          if [ "${{ steps.vars.outputs.tag }}" = "v0.1" ]; then MODEL=linear; else MODEL=ridge; fi
          python src/train.py --model $MODEL
          cat models/metrics.json

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          TAG='${{ steps.vars.outputs.tag }}'
          docker build -t $IMAGE:${TAG} -t $IMAGE:latest .

      - name: Smoke test container
        run: |
          TAG='${{ steps.vars.outputs.tag }}'
          docker run -d -p ${PORT}:${PORT} --name svc $IMAGE:${TAG}
          for i in {1..30}; do sleep 1; curl -fsS "http://127.0.0.1:${PORT}/health" && break || true; done
          curl -fsS "http://127.0.0.1:${PORT}/health"
          curl -s -X POST "http://127.0.0.1:${PORT}/predict" \
            -H "Content-Type: application/json" \
            -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}' | jq .
          docker rm -f svc

      - name: Push image
        run: |
          TAG='${{ steps.vars.outputs.tag }}'
          docker push $IMAGE:${TAG}
          docker push $IMAGE:latest

      - name: Read metrics
        id: m
        run: |
          echo "rmse=$(jq -r '.rmse' models/metrics.json)" >> $GITHUB_OUTPUT
          echo "model_version=$(cat models/model_version.txt)" >> $GITHUB_OUTPUT

      - name: Create Release
        if: ${{ github.event_name != 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Release ${{ steps.vars.outputs.tag }}
          body: |
            ## Metrics
            - RMSE: ${{ steps.m.outputs.rmse }}
            - Model version: ${{ steps.m.outputs.model_version }}
            See CHANGELOG.md for details.
          files: |
            models/metrics.json
            models/model_version.txt
