name: Release (train, docker, GHCR, notes)

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:


permissions:
  contents: write
  packages: write

env:
  IMAGE: ghcr.io/yuzhunn/diabetes-triage-mlops
  PYTHON_VERSION: '3.11'
  PORT: '8000'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Train full model
        run: |
          python src/train.py --model ridge
          test -f models/model.pkl
          test -f models/metrics.json
          test -f models/model_version.txt
          cat models/metrics.json

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image (trains again inside build; OK for reproducibility)
        run: |
          TAG=${GITHUB_REF_NAME}
          docker build -t $IMAGE:${TAG} -t $IMAGE:latest .
      - name: Smoke test container
        run: |
          TAG=${GITHUB_REF_NAME}
          docker run -d -p ${PORT}:${PORT} --name svc $IMAGE:${TAG}
          for i in {1..30}; do sleep 1; curl -fsS "http://127.0.0.1:${PORT}/health" && break || true; done
          curl -fsS "http://127.0.0.1:${PORT}/health"
          curl -s -X POST "http://127.0.0.1:${PORT}/predict" \
            -H "Content-Type: application/json" \
            -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}' | jq .
          docker rm -f svc
      - name: Push image
        run: |
          TAG=${GITHUB_REF_NAME}
          docker push $IMAGE:${TAG}
          docker push $IMAGE:latest
      - name: Read metrics
        id: m
        run: |
          echo "rmse=$(jq -r '.rmse' models/metrics.json)" >> $GITHUB_OUTPUT
          echo "model_version=$(cat models/model_version.txt)" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Metrics
            - RMSE: ${{ steps.m.outputs.rmse }}
            - Model version: ${{ steps.m.outputs.model_version }}
            See CHANGELOG.md for details.
          files: |
            models/metrics.json
            models/model_version.txt
